---
- name: Create alertmanager
  docker_container:
    name: alertmanager
    image: "{{ registry_server | default('docker.io') }}/prom/alertmanager"
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - "{{ '--web.external-url=http://' ~ monitoring_server_alertmanager_ip  ~ ':' ~ exposed_port_alertmanager ~ '/' }}"
    state: started
    recreate: yes
    restart_policy: always
    ports:
      - "{{ exposed_port_alertmanager ~ ':' ~ internal_port_alertmanager }}"
    volumes:
      - /volumes/alertmanager/:/etc/alertmanager/
    networks:
      - name: monitor_network

- name: Create prometheus
  docker_container:
    name: prometheus
    image: "{{ registry_server | default('docker.io') }}/prom/prometheus"
    volumes:
      - /volumes/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--query.lookback-delta=1m'
      - "{{ '--web.external-url=http://' ~ monitoring_server_prometheus_ip  ~ ':' ~ exposed_port_prometheus ~ '/' }}"
    state: started
    recreate: yes
    restart_policy: always
    exposed_ports:
      - "{{ internal_port_prometheus }}"
    ports:
      - "{{ exposed_port_prometheus ~ ':' ~ internal_port_prometheus }}"
    networks:
      - name: monitor_network

- name: Create grafana
  docker_container:
    name: grafana
    image: "{{ registry_server | default('docker.io') }}/grafana/grafana"
    volumes:
      - grafana_data:/var/lib/grafana
    state: started
    recreate: yes
    restart_policy: always
    ports:
      - "{{ exposed_port_grafana ~ ':' ~ internal_port_grafana }}"
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_passowrd }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
    networks:
      - name: monitor_network